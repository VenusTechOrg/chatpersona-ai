'use client';

import { motion, AnimatePresence } from 'framer-motion';
import { 
  TrendingUp, 
  DollarSign, 
  MessageCircle, 
  Brain, 
  Zap, 
  Shield, 
  Globe, 
  ChevronDown, 
  ChevronUp,
  Cpu,
  Rocket,
  Users,
  Target,
  GraduationCap,
  Languages
} from 'lucide-react';
import Image from 'next/image';
import { useState } from 'react';

export default function Features() {
  const [expandedCards, setExpandedCards] = useState<Set<number>>(new Set());
  const [expandedSteps, setExpandedSteps] = useState<Set<number>>(new Set());

  const toggleCard = (index: number) => {
    setExpandedCards(prev => {
      const newSet = new Set(prev);
      if (newSet.has(index)) {
        // If clicking the same card, collapse it
        newSet.delete(index);
      } else {
        // If clicking a different card, collapse all others and expand this one
        newSet.clear();
        newSet.add(index);
      }
      return newSet;
    });
  };

  const toggleStep = (index: number) => {
    setExpandedSteps(prev => {
      const newSet = new Set(prev);
      if (newSet.has(index)) {
        newSet.delete(index);
      } else {
        newSet.clear();
        newSet.add(index);
      }
      return newSet;
    });
  };

  const features = [
    {
      icon: "TrendingUp",
      title: "10x Revenue Boost",
      description: "Advanced AI automation increases your earnings exponentially",
      color: "from-purple-500 to-blue-500"
    },
    {
      icon: "DollarSign",
      title: "5x More Tips",
      description: "Our users report significantly higher tips from engaged subscribers",
      color: "from-green-500 to-emerald-500"
    },
    {
      icon: "MessageCircle",
      title: "Intelligent Conversations",
      description: "AI that understands your audience and responds authentically",
      color: "from-purple-500 to-pink-500"
    }
  ];

  const steps = [
    {
      number: 1,
      title: "Download Chrome Extension",
      description: "Get the ChatPersona AI extension from the Google Chrome Web Store",
      color: "from-cp-purple to-purple-600",
      expandedContent: "The ChatPersona AI Chrome extension is the gateway to transforming your OnlyFans revenue. Simply visit the Chrome Web Store, search for 'ChatPersona AI', and click 'Add to Chrome'. The installation takes less than 30 seconds and requires no technical knowledge.",
      features: ["One-click installation", "Automatic updates", "Secure browser integration", "No coding required"],
      tags: ["Chrome Web Store", "Available on Chrome only"]
    },
    {
      number: 2,
      title: "Get Started & Sign Up",
      description: "Click on 'Get started' and sign-up on app.chatpersona.ai",
      color: "from-cp-green to-green-600",
      expandedContent: "Creating your account is completely free and takes just 2 minutes. No credit card required for the 7-day free trial. Simply provide your email, create a password, and verify your account. You'll have instant access to all features immediately.",
      features: ["No credit card required", "7 day free trial included", "Instant account activation", "Email verification"],
      tags: ["Free trial", "No commitment"]
    },
    {
      number: 3,
      title: "Select Your Persona ðŸ¥·",
      description: "Choose from our diverse collection of AI personas and chat like a pro! ðŸš€",
      color: "from-cp-orange to-orange-600",
      expandedContent: "Our AI personas are trained on successful creator strategies and can adapt to your unique brand voice. Choose from 24+ personas across different categories - flirty, professional, playful, and more. Each persona can be customized with specific traits and response styles.",
      features: ["Connect your OnlyFans account", "Set your response preferences", "Configure AI personality settings", "24+ persona options"],
      tags: ["Persona selection", "Customization"]
    },
    {
      number: 4,
      title: "Choose Your Persona",
      description: "Select from our diverse collection of AI personas that match your brand",
      color: "from-purple-500 to-pink-500",
      expandedContent: "Browse through our carefully curated collection of AI personas designed for different content creators. Each persona has been trained on millions of successful conversations and can handle complex interactions while maintaining authenticity.",
      features: ["Women personas", "Men personas", "LGBTQ+ personas", "Custom traits"],
      tags: ["Women", "Men", "LGBTQ+"]
    },
    {
      number: 5,
      title: "Start Earning",
      description: "Enable the AI and watch your revenue increase with automated, engaging conversations",
      color: "from-indigo-500 to-purple-600",
      expandedContent: "Once activated, your AI will start responding to messages 24/7 with human-like intelligence. Our advanced algorithms analyze conversation patterns and optimize responses for maximum engagement and revenue generation.",
      features: ["10x Revenue Boost", "24/7 AI Responses", "5x More Tips", "Automated conversations"],
      tags: ["Revenue optimization", "24/7 automation"]
    }
  ];

  const benefits = [
    {
      icon: "Cpu",
      title: "Adaptive AI Technology",
      description: "Our AI understands subscriber psychology and keeps them engaged, increasing chances of tips",
      expandedContent: "Our advanced machine learning algorithms analyze conversation patterns, emotional cues, and engagement metrics to deliver responses that feel natural and compelling. The AI adapts to each subscriber's communication style, building stronger connections that lead to increased tips and longer conversations.",
      features: ["Real-time sentiment analysis", "Personalized response generation", "Engagement optimization", "Subscriber behavior tracking"]
    },
    {
      icon: "Rocket",
      title: "Lightning Fast Setup",
      description: "Just install and start using the extension with a quick sign-up process",
      expandedContent: "Get started in under 5 minutes with our streamlined onboarding process. No technical knowledge required - simply install the Chrome extension, connect your OnlyFans account, and start earning more immediately.",
      features: ["One-click installation", "Automatic account sync", "Instant activation", "No coding required"]
    },
    {
      icon: "Users",
      title: "Customizable Personas",
      description: "Choose from 24 distinct personas with adjustable traits, for the best tailored-to-you experience",
      expandedContent: "Select from our diverse collection of AI personas including flirty, professional, playful, and more. Each persona can be customized with specific traits, response styles, and conversation preferences to match your unique brand voice.",
      features: ["24 unique personas", "Customizable traits", "Response style options", "Brand voice matching"]
    },
    {
      icon: "Target",
      title: "Revenue Optimization",
      description: "Increase revenue with PPV content sales and higher tips from engaged users",
      expandedContent: "Our AI is specifically trained to identify opportunities for PPV sales and tip requests. It naturally guides conversations toward monetization while maintaining authenticity, resulting in higher conversion rates and increased earnings.",
      features: ["PPV sales optimization", "Tip request strategies", "Revenue tracking", "Conversion analytics"]
    },
    {
      icon: "GraduationCap",
      title: "Advanced AI Training",
      description: "Our AI possesses the intellect of over 2000 writers, swiftly deciphering dialogues and producing tailored replies",
      expandedContent: "Trained on millions of successful conversations and content from top creators, our AI understands the nuances of adult content communication. It can handle complex conversations, emotional support, and sales conversations with human-like intelligence.",
      features: ["2000+ writer training data", "Contextual understanding", "Emotional intelligence", "Sales conversation mastery"]
    },
    {
      icon: "Languages",
      title: "Multi-Language Support",
      description: "Chat with your audience in multiple languages - English, Spanish, French, German, and more",
      expandedContent: "Break language barriers and reach a global audience. Our AI can seamlessly switch between languages, understand cultural nuances, and maintain authentic conversations in over 20 languages.",
      features: ["20+ languages supported", "Cultural context awareness", "Automatic language detection", "Native-level fluency"]
    }
  ];

  return (
    <section id="features" className="py-20 relative overflow-hidden bg-gradient-to-br from-white via-gray-50 to-blue-50">
      {/* Futuristic Background Elements */}
      <div className="absolute inset-0 overflow-hidden">
        
        {/* Parallax Layers */}
        <div className="absolute inset-0 parallax-bg">
          <div className="absolute top-20 left-10 w-32 h-32 bg-gradient-to-br from-purple-400/20 to-blue-400/20 rounded-full blur-xl animate-pulse"></div>
          <div className="absolute top-40 right-20 w-24 h-24 bg-gradient-to-br from-cyan-400/20 to-purple-400/20 rounded-full blur-lg animate-bounce"></div>
        </div>
        
        <div className="absolute inset-0 parallax-mid">
          <div className="absolute bottom-40 left-1/4 w-40 h-40 bg-gradient-to-br from-blue-400/20 to-cyan-400/20 rounded-full blur-2xl animate-pulse"></div>
        </div>
        
        {/* Tech Aesthetic Elements */}
        <div className="absolute inset-0 circuit-pattern"></div>
        
        {/* Holographic Overlay */}
        <div className="absolute inset-0 holographic-overlay"></div>
      </div>
      
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-20">
        {/* Section Header */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            <span className="bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-600 bg-clip-text text-transparent staggered-text">
              Advanced AI
            </span>
            <br />
            <span className="text-gray-800 staggered-text">Features</span>
          </h2>
          <p className="text-lg text-gray-600 max-w-3xl mx-auto staggered-text">
            Powered by cutting-edge machine learning algorithms trained on successful creator strategies
          </p>
        </motion.div>

        {/* Dynamic Main Features with Advanced Animations */}
        <div className="grid md:grid-cols-3 gap-8 mb-20">
          {features.map((feature, index) => {
            const IconComponent = feature.icon === "TrendingUp" ? TrendingUp : 
                                 feature.icon === "DollarSign" ? DollarSign : 
                                 feature.icon === "MessageCircle" ? MessageCircle : TrendingUp;
            
            // Dynamic metrics for each feature
            const metrics = [
              { value: 10, suffix: "x", label: "Revenue Boost", color: "from-purple-500 to-blue-500" },
              { value: 5, suffix: "x", label: "More Tips", color: "from-green-500 to-emerald-500" },
              { value: 24, suffix: "/7", label: "AI Responses", color: "from-purple-500 to-pink-500" }
            ];
            
            return (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 30, rotateX: -15 }}
                whileInView={{ opacity: 1, y: 0, rotateX: 0 }}
                transition={{ duration: 0.8, delay: index * 0.2 }}
                viewport={{ once: true }}
                className="group relative bg-white/90 backdrop-blur-sm rounded-2xl p-8 border border-gray-200 shadow-lg hover:shadow-2xl transition-all duration-500 hover:scale-105 hover:-translate-y-2"
                whileHover={{ 
                  rotateY: 5,
                  rotateX: 5,
                  scale: 1.05,
                  transition: { duration: 0.3 }
                }}
                style={{ 
                  transformStyle: "preserve-3d",
                  perspective: "1000px"
                }}
              >
                {/* Animated Background Gradient */}
                <motion.div 
                  className="absolute inset-0 bg-gradient-to-br from-purple-500/10 via-blue-500/5 to-cyan-500/10 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"
                  animate={{
                    background: [
                      "linear-gradient(135deg, rgba(168, 85, 247, 0.1), rgba(59, 130, 246, 0.05), rgba(6, 182, 212, 0.1))",
                      "linear-gradient(135deg, rgba(6, 182, 212, 0.1), rgba(168, 85, 247, 0.05), rgba(59, 130, 246, 0.1))",
                      "linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(6, 182, 212, 0.05), rgba(168, 85, 247, 0.1))"
                    ]
                  }}
                  transition={{ duration: 3, repeat: Infinity, ease: "easeInOut" }}
                />
                
                {/* Floating Particles */}
                <div className="absolute inset-0 overflow-hidden rounded-2xl">
                  {[...Array(6)].map((_, i) => (
                    <motion.div
                      key={i}
                      className="absolute w-1 h-1 bg-purple-400 rounded-full opacity-60"
                      style={{
                        left: `${20 + (i * 15)}%`,
                        top: `${10 + (i * 12)}%`
                      }}
                      animate={{
                        y: [0, -20, 0],
                        opacity: [0, 1, 0],
                        scale: [0, 1, 0]
                      }}
                      transition={{
                        duration: 2,
                        repeat: Infinity,
                        delay: i * 0.3,
                        ease: "easeInOut"
                      }}
                    />
                  ))}
                </div>
                
                <div className="relative z-10 text-center">
                  {/* Animated Icon Container */}
                  <motion.div 
                    className={`inline-flex items-center justify-center w-20 h-20 rounded-2xl bg-gradient-to-br ${feature.color} text-white mb-6 shadow-xl`}
                    whileHover={{ 
                      rotate: 360,
                      scale: 1.1,
                      transition: { duration: 0.6 }
                    }}
                    animate={{
                      boxShadow: [
                        "0 10px 25px rgba(0,0,0,0.1)",
                        "0 15px 35px rgba(0,0,0,0.15)",
                        "0 10px 25px rgba(0,0,0,0.1)"
                      ]
                    }}
                    transition={{ duration: 2, repeat: Infinity }}
                  >
                    <motion.div
                      animate={{ rotate: [0, 10, -10, 0] }}
                      transition={{ duration: 2, repeat: Infinity, delay: index * 0.5 }}
                    >
                      <IconComponent className="w-10 h-10" />
                    </motion.div>
                  </motion.div>
                  
                  {/* Animated Counter */}
                  <motion.div 
                    className="mb-4"
                    initial={{ opacity: 0, scale: 0.8 }}
                    whileInView={{ opacity: 1, scale: 1 }}
                    transition={{ duration: 0.6, delay: 0.3 + index * 0.2 }}
                    viewport={{ once: true }}
                  >
                    <div className="text-4xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent mb-2">
                      <motion.span
                        initial={{ opacity: 0 }}
                        whileInView={{ opacity: 1 }}
                        transition={{ duration: 0.8, delay: 0.5 + index * 0.2 }}
                        viewport={{ once: true }}
                      >
                        {metrics[index].value}
                      </motion.span>
                      <span className="text-2xl text-gray-500">{metrics[index].suffix}</span>
                    </div>
                    <div className="text-sm text-gray-500 font-medium">{metrics[index].label}</div>
                  </motion.div>
                  
                  <h3 className="text-xl font-bold mb-4 text-gray-900 group-hover:text-purple-600 transition-colors duration-300">
                    {feature.title}
                  </h3>
                  
                  <p className="text-gray-600 leading-relaxed mb-4">
                    {feature.description}
                  </p>
                  
                  
                  {/* Live Status Indicator */}
                  <motion.div 
                    className="flex items-center justify-center space-x-2 text-sm"
                    initial={{ opacity: 0 }}
                    whileInView={{ opacity: 1 }}
                    transition={{ duration: 0.6, delay: 1.2 + index * 0.2 }}
                    viewport={{ once: true }}
                  >
                    <motion.div 
                      className="w-2 h-2 bg-green-500 rounded-full"
                      animate={{ 
                        scale: [1, 1.2, 1],
                        opacity: [0.7, 1, 0.7]
                      }}
                      transition={{ 
                        duration: 1.5, 
                        repeat: Infinity,
                        delay: index * 0.3
                      }}
                    />
                    <span className="text-gray-600 font-medium">Live & Active</span>
                  </motion.div>
                  
                  {/* Interactive Hover Effect */}
                  <motion.div 
                    className="absolute inset-0 rounded-2xl border-2 border-transparent group-hover:border-purple-300/50 transition-all duration-300"
                    whileHover={{ 
                      scale: 1.02,
                      transition: { duration: 0.2 }
                    }}
                  />
                </div>
              </motion.div>
            );
          })}
        </div>

        {/* Demo Image Section */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-20"
        >
          {/* Enhanced Image Container with Better Proportions */}
          <motion.div 
            className="relative mb-8 max-w-5xl mx-auto"
            initial={{ opacity: 0, scale: 0.95 }}
            whileInView={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            viewport={{ once: true }}
            whileHover={{ scale: 1.01 }}
            style={{ transition: "transform 0.3s ease" }}
          >
            {/* Subtle Background Container */}
            <div className="relative bg-gradient-to-br from-gray-50 via-blue-50 to-purple-50 rounded-3xl p-4 md:p-6 shadow-xl border border-gray-200/50">
              {/* Main Image Container */}
              <div className="relative rounded-2xl overflow-hidden shadow-2xl bg-white">
                <Image
                  src="/assets/features.avif"
                  alt="ChatPersona AI Features Demo"
                  width={1000}
                  height={750}
                  className="w-full h-auto rounded-2xl hover:shadow-3xl transition-all duration-300"
                  priority
                />
                {/* Subtle overlay for depth */}
                <div className="absolute inset-0 bg-gradient-to-t from-black/10 to-transparent rounded-2xl"></div>
                
                {/* Floating Feature Highlights */}
                <motion.div
                  className="absolute top-4 right-4 bg-white/90 backdrop-blur-sm rounded-lg px-3 py-2 shadow-lg border border-gray-200"
                  initial={{ opacity: 0, x: 20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.6, delay: 0.8 }}
                  viewport={{ once: true }}
                >
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                    <span className="text-sm font-medium text-gray-700">Live Demo</span>
                  </div>
                </motion.div>
                
                <motion.div
                  className="absolute bottom-4 left-4 bg-white/90 backdrop-blur-sm rounded-lg px-3 py-2 shadow-lg border border-gray-200"
                  initial={{ opacity: 0, x: -20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.6, delay: 1.0 }}
                  viewport={{ once: true }}
                >
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-purple-500 rounded-full animate-pulse"></div>
                    <span className="text-sm font-medium text-gray-700">AI Powered</span>
                  </div>
                </motion.div>
              </div>
              
              {/* Decorative Elements */}
              <div className="absolute -top-2 -right-2 w-6 h-6 bg-gradient-to-br from-purple-400 to-blue-400 rounded-full opacity-60 animate-pulse"></div>
              <div className="absolute -bottom-2 -left-2 w-4 h-4 bg-gradient-to-br from-green-400 to-cyan-400 rounded-full opacity-60 animate-bounce"></div>
            </div>
          </motion.div>
        </motion.div>

        {/* Dynamic Benefits Grid with Expandable Cards */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16 items-start">
          {benefits.map((benefit, index) => {
            const IconComponent = benefit.icon === "Cpu" ? Cpu : 
                                 benefit.icon === "Rocket" ? Rocket : 
                                 benefit.icon === "Users" ? Users : 
                                 benefit.icon === "Target" ? Target : 
                                 benefit.icon === "GraduationCap" ? GraduationCap : 
                                 benefit.icon === "Languages" ? Languages : Cpu;
            
            const isExpanded = expandedCards.has(index);
            
            return (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 30, rotateX: -10 }}
                whileInView={{ opacity: 1, y: 0, rotateX: 0 }}
                transition={{ duration: 0.8, delay: index * 0.15 }}
                viewport={{ once: true }}
                className="group relative bg-white/90 backdrop-blur-sm rounded-2xl border border-gray-200 shadow-lg hover:shadow-2xl transition-all duration-500 hover:scale-105 hover:-translate-y-3 text-center cursor-pointer hover:border-purple-300/50 h-fit"
                whileHover={{ 
                  rotateY: 3,
                  rotateX: 3,
                  scale: 1.05,
                  transition: { duration: 0.3 }
                }}
                whileTap={{ scale: 0.98 }}
                onClick={(e) => {
                  e.preventDefault();
                  e.stopPropagation();
                  toggleCard(index);
                }}
                style={{ 
                  transformStyle: "preserve-3d",
                  perspective: "1000px"
                }}
                layout
              >
                {/* Animated Background with Morphing Gradient */}
                <motion.div 
                  className="absolute inset-0 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"
                  animate={{
                    background: [
                      "linear-gradient(135deg, rgba(168, 85, 247, 0.08), rgba(59, 130, 246, 0.05))",
                      "linear-gradient(135deg, rgba(59, 130, 246, 0.08), rgba(168, 85, 247, 0.05))",
                      "linear-gradient(135deg, rgba(168, 85, 247, 0.08), rgba(59, 130, 246, 0.05))"
                    ]
                  }}
                  transition={{ duration: 4, repeat: Infinity, ease: "easeInOut" }}
                />
                
                {/* Floating Micro-animations */}
                <div className="absolute inset-0 overflow-hidden rounded-2xl">
                  {[...Array(4)].map((_, i) => (
                    <motion.div
                      key={i}
                      className="absolute w-0.5 h-0.5 bg-purple-400 rounded-full opacity-40"
                      style={{
                        left: `${15 + (i * 20)}%`,
                        top: `${20 + (i * 15)}%`
                      }}
                      animate={{
                        y: [0, -15, 0],
                        opacity: [0, 0.6, 0],
                        scale: [0, 1, 0]
                      }}
                      transition={{
                        duration: 3,
                        repeat: Infinity,
                        delay: i * 0.8,
                        ease: "easeInOut"
                      }}
                    />
                  ))}
                </div>
                
                <div className="relative z-10 p-6 card-content min-h-fit">
                  {/* Enhanced Icon with 3D Rotation */}
                  <motion.div 
                    className="inline-flex items-center justify-center w-20 h-20 rounded-2xl bg-gradient-to-br from-purple-500 to-blue-500 text-white mb-6 shadow-xl mx-auto"
                    whileHover={{ 
                      rotateY: 180,
                      scale: 1.15,
                      transition: { duration: 0.6 }
                    }}
                    animate={{
                      boxShadow: [
                        "0 10px 25px rgba(168, 85, 247, 0.3)",
                        "0 15px 35px rgba(168, 85, 247, 0.4)",
                        "0 10px 25px rgba(168, 85, 247, 0.3)"
                      ]
                    }}
                    transition={{ duration: 3, repeat: Infinity }}
                  >
                    <motion.div
                      animate={{ 
                        rotate: [0, 5, -5, 0],
                        scale: [1, 1.05, 1]
                      }}
                      transition={{ 
                        duration: 2, 
                        repeat: Infinity, 
                        delay: index * 0.3 
                      }}
                    >
                      <IconComponent className="w-10 h-10" />
                    </motion.div>
                  </motion.div>
                  
                  <h4 className="text-lg font-bold mb-3 text-gray-900 group-hover:text-purple-600 transition-colors duration-300">
                    {benefit.title}
                  </h4>
                  
                  <p className="text-gray-600 leading-relaxed mb-4 text-sm">
                    {benefit.description}
                  </p>
                  
                  {/* Expand/Collapse Button with Click Indicator */}
                  <motion.div 
                    className="flex items-center justify-center space-x-2 text-xs mb-4 group"
                    initial={{ opacity: 0 }}
                    whileInView={{ opacity: 1 }}
                    transition={{ duration: 0.6, delay: 1.4 + index * 0.1 }}
                    viewport={{ once: true }}
                  >
                    <motion.div 
                      className="w-1.5 h-1.5 bg-green-500 rounded-full"
                      animate={{ 
                        scale: [1, 1.3, 1],
                        opacity: [0.6, 1, 0.6]
                      }}
                      transition={{ 
                        duration: 2, 
                        repeat: Infinity,
                        delay: index * 0.4
                      }}
                    />
                    <span className="text-gray-500 font-medium">Active</span>
                    <motion.div
                      animate={{ rotate: isExpanded ? 180 : 0 }}
                      transition={{ duration: 0.3 }}
                      className="group-hover:scale-110 transition-transform duration-200"
                    >
                      {isExpanded ? (
                        <ChevronUp className="w-4 h-4 text-purple-500" />
                      ) : (
                        <ChevronDown className="w-4 h-4 text-purple-500" />
                      )}
                    </motion.div>
                    <span className="text-xs text-gray-400 group-hover:text-purple-500 transition-colors duration-200">
                      {isExpanded ? 'Click to collapse' : 'Click to expand'}
                    </span>
                  </motion.div>
                  
                  {/* Expandable Content */}
                  <AnimatePresence mode="wait">
                    {isExpanded && (
                      <motion.div
                        key={`expanded-${index}`}
                        initial={{ opacity: 0, height: 0, marginTop: 0 }}
                        animate={{ opacity: 1, height: "auto", marginTop: 16 }}
                        exit={{ opacity: 0, height: 0, marginTop: 0 }}
                        transition={{ duration: 0.3, ease: "easeInOut" }}
                        className="overflow-hidden"
                      >
                        <div className="pt-4 border-t border-gray-200">
                          <p className="text-gray-700 text-sm leading-relaxed mb-4">
                            {benefit.expandedContent}
                          </p>
                          
                          {/* Feature List */}
                          <div className="space-y-2">
                            <h5 className="text-sm font-semibold text-gray-800 mb-2">Key Features:</h5>
                            <div className="grid grid-cols-1 gap-2">
                              {benefit.features.map((feature, featureIndex) => (
                                <motion.div
                                  key={featureIndex}
                                  initial={{ opacity: 0, x: -10 }}
                                  animate={{ opacity: 1, x: 0 }}
                                  transition={{ duration: 0.3, delay: featureIndex * 0.1 }}
                                  className="flex items-center space-x-2 text-xs text-gray-600"
                                >
                                  <div className="w-1.5 h-1.5 bg-purple-500 rounded-full flex-shrink-0"></div>
                                  <span>{feature}</span>
                                </motion.div>
                              ))}
                            </div>
                          </div>
                        </div>
                      </motion.div>
                    )}
                  </AnimatePresence>
                  
                  
                  {/* Magnetic Hover Effect */}
                  <motion.div 
                    className="absolute inset-0 rounded-2xl border-2 border-transparent group-hover:border-purple-300/30 transition-all duration-300"
                    whileHover={{ 
                      scale: 1.01,
                      transition: { duration: 0.2 }
                    }}
                  />
                </div>
              </motion.div>
            );
          })}
        </div>

        {/* Installation & Usage Steps - New Design */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="mb-16"
        >
          <div className="text-center mb-12">
            <h3 className="heading-secondary gradient-text mb-4">Get Started with ChatPersona AI</h3>
            <p className="text-lg text-gray-600 max-w-3xl mx-auto">
              Follow these simple steps to transform your OnlyFans revenue with AI-powered conversations
            </p>
          </div>

          {/* Step Cards */}
          <div className="space-y-8">
            {steps.map((step, index) => {
              const isExpanded = expandedSteps.has(index);
              const isEven = index % 2 === 1;
              
              return (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, x: isEven ? 50 : -50 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.6, delay: 0.1 + index * 0.1 }}
                  viewport={{ once: true }}
                  className={`group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-xl transition-all duration-300 cursor-pointer ${
                    isExpanded ? 'ring-2 ring-purple-300' : ''
                  }`}
                  onClick={() => toggleStep(index)}
                >
                  <div className={`flex flex-col ${isEven ? 'md:flex-row-reverse' : 'md:flex-row'} items-center gap-8 p-6`}>
                    <div className="flex-shrink-0">
                      <div className={`w-16 h-16 bg-gradient-to-br ${step.color} rounded-full flex items-center justify-center text-white text-2xl font-bold shadow-lg`}>
                        {step.number}
                      </div>
                    </div>
                    <div className="flex-grow text-center md:text-left">
                      <h4 className="text-xl font-bold text-gray-900 mb-2 group-hover:text-purple-600 transition-colors duration-300">
                        {step.title}
                      </h4>
                      <p className="text-gray-600 mb-4">{step.description}</p>
                      
                      {/* Tags */}
                      <div className="flex flex-wrap gap-2 justify-center md:justify-start mb-4">
                        {step.tags.map((tag, tagIndex) => (
                          <span key={tagIndex} className="px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm">
                            {tag}
                          </span>
                        ))}
                      </div>
                      
                      {/* Expand/Collapse Indicator */}
                      <div className="flex items-center justify-center md:justify-start space-x-2 text-sm text-gray-500">
                        <motion.div
                          animate={{ rotate: isExpanded ? 180 : 0 }}
                          transition={{ duration: 0.3 }}
                          className="group-hover:scale-110 transition-transform duration-200"
                        >
                          {isExpanded ? (
                            <ChevronUp className="w-4 h-4 text-purple-500" />
                          ) : (
                            <ChevronDown className="w-4 h-4 text-purple-500" />
                          )}
                        </motion.div>
                        <span className="text-xs text-gray-400 group-hover:text-purple-500 transition-colors duration-200">
                          {isExpanded ? 'Click to collapse' : 'Click to expand'}
                        </span>
                      </div>
                    </div>
                  </div>
                  
                  {/* Expandable Content */}
                  <AnimatePresence mode="wait">
                    {isExpanded && (
                      <motion.div
                        key={`expanded-step-${index}`}
                        initial={{ opacity: 0, height: 0 }}
                        animate={{ opacity: 1, height: "auto" }}
                        exit={{ opacity: 0, height: 0 }}
                        transition={{ duration: 0.3, ease: "easeInOut" }}
                        className="overflow-hidden"
                      >
                        <div className="px-6 pb-6 border-t border-gray-200">
                          <div className="pt-4">
                            <p className="text-gray-700 text-sm leading-relaxed mb-4">
                              {step.expandedContent}
                            </p>
                            
                            {/* Feature List */}
                            <div className="space-y-2">
                              <h5 className="text-sm font-semibold text-gray-800 mb-2">Key Features:</h5>
                              <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                                {step.features.map((feature, featureIndex) => (
                                  <motion.div
                                    key={featureIndex}
                                    initial={{ opacity: 0, x: -10 }}
                                    animate={{ opacity: 1, x: 0 }}
                                    transition={{ duration: 0.3, delay: featureIndex * 0.1 }}
                                    className="flex items-center space-x-2 text-xs text-gray-600"
                                  >
                                    <div className="w-1.5 h-1.5 bg-purple-500 rounded-full flex-shrink-0"></div>
                                    <span>{feature}</span>
                                  </motion.div>
                                ))}
                              </div>
                            </div>
                          </div>
                        </div>
                      </motion.div>
                    )}
                  </AnimatePresence>
                </motion.div>
              );
            })}
          </div>
        </motion.div>

          {/* CTA Section */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.5 }}
            viewport={{ once: true }}
            className="text-center mt-12"
          >
            <button className="relative group bg-gradient-to-r from-purple-600 to-blue-600 text-white font-semibold px-12 py-4 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 mb-4">
              <span className="relative z-10">Start Your Free Trial Now</span>
              <div className="absolute inset-0 bg-gradient-to-r from-purple-600 to-blue-600 rounded-xl blur opacity-75 group-hover:opacity-100 transition-opacity duration-300"></div>
            </button>
            <p className="text-gray-500 text-sm">Join thousands of creators already earning more with AI</p>
          </motion.div>
        </motion.div>

        {/* New: Feature Highlights */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="mb-16"
        >
          <div className="text-center mb-12">
            <h3 className="heading-secondary gradient-text mb-4">Why Choose ChatPersona AI?</h3>
            <p className="text-lg text-gray-600 max-w-3xl mx-auto">
              Discover the advanced features that make ChatPersona AI the #1 choice for content creators
            </p>
          </div>
          
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div className="space-y-8">
              <motion.div
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6, delay: 0.1 }}
                viewport={{ once: true }}
                className="flex items-start space-x-4"
              >
                <div className="w-12 h-12 bg-cp-purple rounded-lg flex items-center justify-center flex-shrink-0">
                  <span className="text-white text-xl">ðŸ¤–</span>
                </div>
                <div>
                  <h4 className="text-xl font-bold mb-2">Advanced AI Technology</h4>
                  <p className="text-gray-600">Powered by cutting-edge machine learning algorithms trained on millions of successful conversations</p>
                </div>
              </motion.div>
              
              <motion.div
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6, delay: 0.2 }}
                viewport={{ once: true }}
                className="flex items-start space-x-4"
              >
                <div className="w-12 h-12 bg-cp-green rounded-lg flex items-center justify-center flex-shrink-0">
                  <span className="text-white text-xl">âš¡</span>
                </div>
                <div>
                  <h4 className="text-xl font-bold mb-2">Lightning Fast Setup</h4>
                  <p className="text-gray-600">Get started in under 5 minutes with our intuitive setup process and instant activation</p>
                </div>
              </motion.div>
              
              <motion.div
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6, delay: 0.3 }}
                viewport={{ once: true }}
                className="flex items-start space-x-4"
              >
                <div className="w-12 h-12 bg-cp-orange rounded-lg flex items-center justify-center flex-shrink-0">
                  <span className="text-white text-xl">ðŸ”’</span>
                </div>
                <div>
                  <h4 className="text-xl font-bold mb-2">24/7 Customer Support</h4>
                  <p className="text-gray-600">Get instant help from our dedicated support team whenever you need assistance</p>
                </div>
              </motion.div>
            </div>
            
            <motion.div
              initial={{ opacity: 0, scale: 0.9 }}
              whileInView={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.8, delay: 0.4 }}
              viewport={{ once: true }}
              className="relative"
            >
              <div className="premium-features-card bg-gradient-to-br from-cp-purple/10 to-cp-green/10 rounded-2xl p-8 border border-cp-purple/20 relative overflow-hidden">
                {/* Animated Background Particles */}
                <div className="absolute inset-0 overflow-hidden">
                  <motion.div
                    animate={{ 
                      x: [0, 20, -20, 0],
                      y: [0, -20, 20, 0],
                      rotate: [0, 180, 360]
                    }}
                    transition={{ 
                      duration: 8,
                      repeat: Infinity,
                      ease: "linear"
                    }}
                    className="absolute top-4 right-4 w-2 h-2 bg-cp-purple/30 rounded-full"
                  />
                  <motion.div
                    animate={{ 
                      x: [0, -15, 15, 0],
                      y: [0, 15, -15, 0],
                      rotate: [0, -180, -360]
                    }}
                    transition={{ 
                      duration: 6,
                      repeat: Infinity,
                      ease: "linear"
                    }}
                    className="absolute bottom-6 left-6 w-1.5 h-1.5 bg-cp-green/30 rounded-full"
                  />
                  <motion.div
                    animate={{ 
                      x: [0, 25, -25, 0],
                      y: [0, -25, 25, 0],
                      scale: [1, 1.2, 0.8, 1]
                    }}
                    transition={{ 
                      duration: 10,
                      repeat: Infinity,
                      ease: "linear"
                    }}
                    className="absolute top-1/2 left-4 w-1 h-1 bg-cp-orange/30 rounded-full"
                  />
                </div>
                
                <div className="relative z-10 h-80 flex items-center justify-center">
                  {/* Central Animated Core */}
                  <motion.div 
                    className="relative w-32 h-32 flex items-center justify-center"
                    animate={{ 
                      rotate: [0, 360],
                      scale: [1, 1.05, 1]
                    }}
                    transition={{ 
                      duration: 8,
                      repeat: Infinity,
                      ease: "linear"
                    }}
                  >
                    {/* Main Central Diamond with Logo */}
                    <motion.div
                      className="w-20 h-20 bg-gradient-to-br from-purple-400 via-pink-400 to-blue-400 rounded-lg transform rotate-45 relative flex items-center justify-center"
                      animate={{ 
                        boxShadow: [
                          "0 0 20px rgba(168, 85, 247, 0.4)",
                          "0 0 40px rgba(168, 85, 247, 0.6)",
                          "0 0 20px rgba(168, 85, 247, 0.4)"
                        ]
                      }}
                      transition={{ 
                        duration: 3,
                        repeat: Infinity,
                        ease: "easeInOut"
                      }}
                    >
                      {/* Inner Glow */}
                      <div className="absolute inset-2 bg-gradient-to-br from-white/30 to-transparent rounded-lg"></div>
                      
                      {/* Logo Container */}
                      <motion.div
                        className="relative z-10 transform -rotate-45"
                        animate={{
                          scale: [1, 1.05, 1],
                          rotate: [0, 5, -5, 0]
                        }}
                        transition={{
                          duration: 4,
                          repeat: Infinity,
                          ease: "easeInOut"
                        }}
                      >
                        {/* Logo - Purple Smiling Devil Emoji */}
                        <div className="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center shadow-lg">
                          <span className="text-3xl">
                            ðŸ˜ˆ
                          </span>
                        </div>
                      </motion.div>
                    </motion.div>

                    {/* Orbiting Elements */}
                    <motion.div
                      className="absolute inset-0"
                      animate={{ rotate: 360 }}
                      transition={{ 
                        duration: 6,
                        repeat: Infinity,
                        ease: "linear"
                      }}
                    >
                      {/* Orbiting Stars */}
                      <motion.div 
                        className="absolute -top-2 left-1/2 transform -translate-x-1/2 w-3 h-3 bg-yellow-400 rounded-full"
                        animate={{ 
                          scale: [1, 1.3, 1],
                          opacity: [0.7, 1, 0.7]
                        }}
                        transition={{ 
                          duration: 2,
                          repeat: Infinity,
                          ease: "easeInOut"
                        }}
                      />
                      <motion.div 
                        className="absolute -right-2 top-1/2 transform -translate-y-1/2 w-2 h-2 bg-pink-400 rounded-full"
                        animate={{ 
                          scale: [1, 1.2, 1],
                          opacity: [0.6, 1, 0.6]
                        }}
                        transition={{ 
                          duration: 2.5,
                          repeat: Infinity,
                          ease: "easeInOut",
                          delay: 0.5
                        }}
                      />
                      <motion.div 
                        className="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-2.5 h-2.5 bg-green-400 rounded-full"
                        animate={{ 
                          scale: [1, 1.4, 1],
                          opacity: [0.8, 1, 0.8]
                        }}
                        transition={{ 
                          duration: 1.8,
                          repeat: Infinity,
                          ease: "easeInOut",
                          delay: 1
                        }}
                      />
                      <motion.div 
                        className="absolute -left-2 top-1/2 transform -translate-y-1/2 w-2 h-2 bg-blue-400 rounded-full"
                        animate={{ 
                          scale: [1, 1.1, 1],
                          opacity: [0.5, 1, 0.5]
                        }}
                        transition={{ 
                          duration: 3,
                          repeat: Infinity,
                          ease: "easeInOut",
                          delay: 1.5
                        }}
                      />
                    </motion.div>

                    {/* Floating Particles */}
                    <motion.div
                      className="absolute inset-0"
                    >
                      {[...Array(8)].map((_, i) => (
                        <motion.div
                          key={i}
                          className="absolute w-1 h-1 bg-white/60 rounded-full"
                          style={{
                            left: `${20 + (i * 10)}%`,
                            top: `${15 + (i * 8)}%`
                          }}
                          animate={{
                            y: [0, -20, 0],
                            opacity: [0, 1, 0],
                            scale: [0, 1, 0]
                          }}
                          transition={{
                            duration: 3,
                            repeat: Infinity,
                            delay: i * 0.3,
                            ease: "easeInOut"
                          }}
                        />
                      ))}
                    </motion.div>

                    {/* Pulsing Rings */}
                    <motion.div
                      className="absolute inset-0 border-2 border-purple-300/30 rounded-full"
                      animate={{
                        scale: [1, 1.5, 1],
                        opacity: [0.3, 0, 0.3]
                      }}
                      transition={{
                        duration: 4,
                        repeat: Infinity,
                        ease: "easeOut"
                      }}
                    />
                    <motion.div
                      className="absolute inset-0 border border-pink-300/20 rounded-full"
                      animate={{
                        scale: [1, 2, 1],
                        opacity: [0.2, 0, 0.2]
                      }}
                      transition={{
                        duration: 6,
                        repeat: Infinity,
                        ease: "easeOut",
                        delay: 1
                      }}
                    />
                  </motion.div>
                </div>
              </div>
            </motion.div>
          </div>
        </motion.div>

        {/* New: Testimonial Quote */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="bg-gray-50 rounded-2xl p-8 mb-16"
        >
          <div className="text-center">
            <div className="text-4xl text-cp-purple mb-4">"</div>
            <blockquote className="text-xl text-gray-700 mb-6 max-w-3xl mx-auto">
              "ChatPersona AI completely transformed my revenue. I went from making $500/month to over $5,000/month in just 3 months. The AI responses are so natural, my subscribers can't tell the difference!"
            </blockquote>
            <div className="flex items-center justify-center space-x-4">
              <div className="w-12 h-12 bg-cp-purple rounded-full flex items-center justify-center">
                <span className="text-white font-bold">S</span>
              </div>
              <div className="text-left">
                <div className="font-bold text-gray-900">Sarah M.</div>
                <div className="text-sm text-gray-600">Top 1% OnlyFans Creator</div>
              </div>
            </div>
          </div>
        </motion.div>

      </div>
    </section>
  );
}

